name: CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and Push Docker Image
        env:
          REGISTRY: docker.io
          IMAGE_NAME: stevengepi/teammarket-pethelp
          TAG_NAME: latest
        run: |
          docker buildx build --no-cache --push --tag $REGISTRY/$IMAGE_NAME:$TAG_NAME -f ./Dockerfile ./
          echo "Pushed image: $REGISTRY/$IMAGE_NAME:$TAG_NAME"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Amazon Lightsail via SSH action
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.AMAZON_SERVER_USERNAME }}
          key: ${{ secrets.AMAZON_SERVER_SSH }}
          script: |
            REGISTRY="docker.io"
            IMAGE_NAME="stevengepi/teammarket-pethelp"
            TAG_NAME="latest"
            FULL_IMAGE_NAME="$REGISTRY/$IMAGE_NAME:$TAG_NAME"

            echo "Deploying: $FULL_IMAGE_NAME"
            echo ${{ secrets.DOCKER_PASSWORD }} | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            sudo docker pull "$FULL_IMAGE_NAME" || { echo "Pull failed!"; exit 1; }

            if [ "$(sudo docker ps -q -f name=pethelp-backend)" ]; then
                echo "Stopping and removing old container"
                sudo docker stop pethelp-backend || true
                sudo docker rm -f pethelp-backend || true
            fi

            echo "Starting new container"
            sudo docker run -d -p 8080:8080 --name pethelp-backend -t "$FULL_IMAGE_NAME" || { echo "Run failed!"; exit 1; }

            echo "Cleaning up old images"
            sudo docker image prune -f
